{"version":3,"sources":["components/UserProfile/UserProfile.module.scss","components/TransactionHistory/TransactionHistory.module.scss","components/Statistics/Statistics.module.scss","components/FriendsList/FriendsList.module.scss","components/UserProfile/UserProfile.jsx","components/Statistics/Statistics.jsx","components/FriendsList/FriendsList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","bgColorGen.js","index.js"],"names":["module","exports","UserDescription","avatar","name","tag","location","className","styles","description","src","alt","title","defaultProps","UserStats","stats","statsItem","label","quantity","followers","views","likes","UserProfile","props","card","Statistics","data","StatItem","percentage","Stats","statsList","map","item","id","FriendsListItem","status","isOnline","online","offline","listItem","width","FriendsList","list","Transaction","type","amount","currency","tableRow","tbodyContent","TransactionHistory","items","transactions","thead","tableTitle","tableBody","App","user","statisticsData","friends","random","Math","floor","ReactDOM","render","StrictMode","document","getElementById","querySelectorAll","forEach","style","background"],"mappings":"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","file":"static/js/main.e69921c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"UserProfile_card__1kb3F\",\"description\":\"UserProfile_description__2mOC5\",\"title\":\"UserProfile_title__2eoaz\",\"avatar\":\"UserProfile_avatar__AwuoF\",\"stats\":\"UserProfile_stats__3xyUb\",\"statsItem\":\"UserProfile_statsItem__3X1CG\",\"label\":\"UserProfile_label__Nb9jg\",\"quantity\":\"UserProfile_quantity__1DQpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactions\":\"TransactionHistory_transactions__21ylW\",\"thead\":\"TransactionHistory_thead__1K2C5\",\"tableTitle\":\"TransactionHistory_tableTitle__2xLsS\",\"tableBody\":\"TransactionHistory_tableBody__Awhfp\",\"tableRow\":\"TransactionHistory_tableRow__nMrFl\",\"tbodyContent\":\"TransactionHistory_tbodyContent__3bdjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__3YXoE\",\"statsList\":\"Statistics_statsList__16vpB\",\"statsItem\":\"Statistics_statsItem__4rD9_\",\"title\":\"Statistics_title__2vNnr\",\"label\":\"Statistics_label__1_0cq\",\"percentage\":\"Statistics_percentage__1HYcv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendsList_status__1bFiK\",\"offline\":\"FriendsList_offline__1X8G3\",\"online\":\"FriendsList_online__25pw9\",\"list\":\"FriendsList_list__2L6ca\",\"listItem\":\"FriendsList_listItem__3sIya\",\"avatar\":\"FriendsList_avatar__6-s8s\",\"name\":\"FriendsList_name__3NBcj\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './UserProfile.module.scss';\r\n\r\nconst UserDescription = ({ avatar, name, tag, location }) => {\r\n  return (\r\n    <div className={styles.description}>\r\n      <div className={styles.avatar}>\r\n        <img src={avatar} alt={name} />\r\n      </div>\r\n      <p className={styles.title}>{name}</p>\r\n      <p>@{tag}</p>\r\n      <p>{location}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserDescription.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n};\r\n\r\nUserDescription.defaultProps = {\r\n  avatar: 'https://via.placeholder.com/150',\r\n};\r\n\r\nconst UserStats = ({ stats }) => {\r\n  return (\r\n    <ul className={styles.stats}>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className={styles.statsItem}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nUserStats.propTypes = {\r\n  stats: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserProfile = props => {\r\n  const { avatar, name, tag, location, stats } = props;\r\n  return (\r\n    <div className={styles.card}>\r\n      <UserDescription avatar={avatar} alt={name} name={name} tag={tag} location={location} />\r\n      <UserStats stats={stats} />\r\n    </div>\r\n  );\r\n};\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.scss';\r\n\r\nconst Statistics = ({ title, data }) => {\r\n  return (\r\n    <div>\r\n      <div className={styles.stats}>\r\n        {title && <h2 className={styles.title}>{title}</h2>}\r\n        <Stats data={data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nconst StatItem = props => (\r\n  <li className={styles.statsItem}>\r\n    <span className={styles.label}>{props.label}</span>\r\n    <span className={styles.percentage}>{props.percentage}%</span>\r\n  </li>\r\n);\r\n\r\nStatItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Stats = ({ data }) => (\r\n  <ul className={styles.statsList}>\r\n    {data.map(item => {\r\n      return <StatItem key={item.id} label={item.label} percentage={item.percentage} />;\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendsList.module.scss';\r\n\r\nconst FriendsList = ({ list }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.list}>\r\n        {list.map(item => (\r\n          <FriendsListItem key={item.id} {...item} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendsList.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst FriendsListItem = ({ avatar, name, isOnline }) => {\r\n  const status = isOnline ? styles.online : styles.offline;\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <span className={status}></span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendsListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  status: PropTypes.bool,\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.scss';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transactions}>\r\n      <thead className={styles.thead}>\r\n        <tr>\r\n          <th className={styles.tableTitle}>Type</th>\r\n          <th className={styles.tableTitle}>Amount</th>\r\n          <th className={styles.tableTitle}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody className={styles.tableBody}>\r\n        {items.map(item => (\r\n          <Transaction key={item.id} {...item} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nconst Transaction = ({ type, amount, currency }) => {\r\n  return (\r\n    <tr className={styles.tableRow}>\r\n      <td className={styles.tbodyContent}>{type}</td>\r\n      <td className={styles.tbodyContent}>{amount}</td>\r\n      <td className={styles.tbodyContent}>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransaction.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import user from './data/user.json';\r\nimport UserProfile from './components/UserProfile/UserProfile';\r\nimport statisticsData from './data/statistical-data.json';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport friends from './data/friends.json';\r\nimport FriendsList from './components/FriendsList/FriendsList';\r\nimport transactions from './data/transactions.json';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <UserProfile {...user} />\r\n      <Statistics title=\"Upload stats\" data={statisticsData} />\r\n      <FriendsList list={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// <Profile\r\n//   name={user.name}\r\n//   tag={user.tag}\r\n//   location={user.location}\r\n//   avatar={user.avatar}\r\n//   stats={user.stats}\r\n// />\r\n\r\n/* <Statistics title=\"Upload stats\" stats={statisticalData} />; */\r\n/* <Statistics stats={statisticalData} />; */\r\n","const random = () => Math.floor(255 * Math.random());\r\n\r\nexport default function setBgColor() {\r\n  return `rgb(${random()}, ${random()}, ${random()})`;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport setBgColor from './bgColorGen';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nconst statsItem = document.querySelectorAll('li[class^=Statistics_statsItem]');\r\n\r\nstatsItem.forEach(item => {\r\n  item.style.background = setBgColor();\r\n});\r\n"],"sourceRoot":""}